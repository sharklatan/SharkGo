name: macOS

on:
  push:
    branches:
      - dev

jobs:
  build-compress-publish-dmg-net6-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache .NET SDK
        uses: actions/cache@v2
        with:
          path: ~/.dotnet/tools
          key: dotnet-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            dotnet-
            
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.x' # Usa la versión apropiada

      - name: Cache .NET packages
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: dotnet-${{ runner.os }}-${{ hashFiles('**/*.csproj.lock') }}
          restore-keys: |
            dotnet-${{ runner.os }}-

      - name: Build and Publish .NET 6.0
        run: |
          dotnet restore
          dotnet build --configuration Release --framework net6.0
          dotnet publish --configuration Release --framework net6.0 --output ./publish/net6.0


      - name: List files before unzip
        run: ls -R /Users/runner/work/SharkGo/
  
      - name: Unzip SharkGo.app.zip
        run: unzip /Users/runner/work/SharkGo/SharkGo/SharkGo.app.zip -d /Users/runner/work/SharkGo/SharkGo
  
      - name: Copy files to SharkGo.app
        run: |
          mkdir -p /Users/runner/work/SharkGo/SharkGo/SharkGo.app/Contents/MacOS/bin         
          cp -r /Users/runner/work/SharkGo/SharkGo/SharkGo/bin/Release/net6.0/* /Users/runner/work/SharkGo/SharkGo/SharkGo.app/Contents/MacOS/bin/
          cp /Users/runner/work/SharkGo/SharkGo/SharkGo/bin/Release/net6.0/runtimes/osx-x64/native/* /Users/runner/work/SharkGo/SharkGo/SharkGo.app/Contents/MacOS/bin/
          rm -r /Users/runner/work/SharkGo/SharkGo/SharkGo.app/Contents/MacOS/bin/runtimes

      - name: List files after copying
        run: ls -R /Users/runner/work/SharkGo/SharkGo/SharkGo.app/



      - name: Create DMG
        run: |
          hdiutil create -srcfolder /Users/runner/work/SharkGo/SharkGo/SharkGo.app -volname SharkGo -format UDZO ./SharkGo.dmg

      - name: List files in publish directory
        run: ls -R /Users/runner/work/SharkGo/

      - name: Upload Release Artifact .NET 6.0 and DMG File
        uses: actions/upload-artifact@v2
        with:
          name: release-artifact-net6.0
          path: |
            ./publish

      - name: Get Last Commit
        id: last_commit
        run: echo "::set-output name=commit::$(git log -1 --pretty=format:'%h - %s')"

      - name: Get Last Push Date
        id: last_push
        run: echo "::set-output name=push_date::$(git log -1 --pretty=format:'%cd' --date=short)'"

      - name: Create Or Update Release
        id: create_release
        uses: joutvhu/create-release@v1.0.0
        with:
          tag_name: Beta
          name: "Beta Release - ${{ steps.last_push.outputs.push_date }} -"
          draft: false
          on_release_exists: update
          remove_assets: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload DMG
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./SharkGo.dmg # Ruta correcta al archivo comprimido
          #file: ./publish/SharkGoFiles.tar.gz # Ruta correcta al archivo comprimido
          asset_name: SharkGo_Beta-macOS-x64.dmg
          tag: ${{ steps.create_release.outputs.tag_name }}  # Obtén el nombre de la etiqueta del paso anterior
          overwrite: true  # Sobrescribe el archivo si ya existe en el lanzamiento
